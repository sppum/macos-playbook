- name: Ensure Homebrew parent directory has correct permissions.
  file:
    path: "{{ homebrew_prefix }}"
    owner: root
    group: wheel
    state: directory
    mode: 0755
  become: yes

- name: Ensure Homebrew directory exists.
  file:
    path: "{{ homebrew_install_path }}"
    owner: "{{ ansible_user_id }}"
    group: admin
    state: directory
    mode: 0775
  become: yes

# Clone Homebrew.
- name: Ensure Homebrew is installed.
  git:
    repo: "{{ homebrew_repo }}"
    version: master
    dest: "{{ homebrew_install_path }}"
    update: no
    accept_hostkey: yes
    depth: 1

# Adjust Homebrew permissions.
#- name: Ensure proper permissions and ownership on homebrew_brew_bin_path dirs.
#  file:
#    path: "{{ homebrew_brew_bin_path }}"
#    state: directory
#    owner: "{{ ansible_user_id }}"
#    group: admin
#    mode: 0775
#  become: yes
#
#- name: Ensure proper ownership on homebrew_install_path subdirs.
#  file:
#    path: "{{ homebrew_install_path }}"
#    state: directory
#    owner: "{{ ansible_user_id }}"
#    group: admin
#    recurse: true
#  become: yes

- name: Check if homebrew binary is already in place.
  stat: "path={{ homebrew_brew_bin_path }}/brew"
  register: homebrew_binary

- name: Symlink brew to homebrew_brew_bin_path.
  file:
    src: "{{ homebrew_install_path }}/bin/brew"
    dest: "{{ homebrew_brew_bin_path }}/brew"
    state: link
  when: homebrew_binary.stat.exists == false
  become: yes

- name: Force update brew after installation.
  command: "{{ homebrew_brew_bin_path }}/brew update --force"
  when: homebrew_binary.stat.exists == false

- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"

- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages
